import Jama.Matrix;
import enums.TransformType;
import jpeg.Transform;
import org.junit.jupiter.api.MethodOrderer;
import org.junit.jupiter.api.Order;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.TestMethodOrder;

import static org.junit.jupiter.api.Assertions.assertArrayEquals;
import static org.junit.jupiter.api.Assertions.assertEquals;

@TestMethodOrder(MethodOrderer.OrderAnnotation.class)
public class TransformTest {

    @Test
    @Order(1)
    void transformMatrixTest() {
        System.out.println("DCT matrices tests:");
        assertArrayEquals(dctMatrix8, roundArray(Transform.getTransformMatrix(TransformType.DCT, 8), 4), "DCT matrix 8x8 does not match");
        System.out.println("\tTest DCT matrix 8x8: OK");

        assertArrayEquals(dctMatrix16, roundArray(Transform.getTransformMatrix(TransformType.DCT, 16), 4), "DCT matrix 16x16 does not match");
        System.out.println("\tTest DCT matrix 16x16: OK");

        assertArrayEquals(dctMatrix32, roundArray(Transform.getTransformMatrix(TransformType.DCT, 32), 4), "DCT matrix 32x32 does not match");
        System.out.println("\tTest DCT matrix 32x32: OK");


        System.out.println("\nWHT matrices tests:");
        assertEquals((1 / Math.sqrt(8)), Transform.getTransformMatrix(TransformType.WHT, 8).get(0, 0), "WHT matrix is missing part 1/sqrt(blockSize)");
        System.out.println("\tTest WHT for present SQRT: OK");

        assertArrayEquals(whtMatrix2, roundArray(Transform.getTransformMatrix(TransformType.WHT, 2).times(Math.sqrt(2)), 0), "WHT matrix 2x2 does not match");
        System.out.println("\tTest WHT matrix 2x2: OK");

        assertArrayEquals(whtMatrix4, roundArray(Transform.getTransformMatrix(TransformType.WHT, 4).times(Math.sqrt(4)), 0), "WHT matrix 4x4 does not match");
        System.out.println("\tTest WHT matrix 4x4: OK");

        assertArrayEquals(whtMatrix8, roundArray(Transform.getTransformMatrix(TransformType.WHT, 8).times(Math.sqrt(8)), 0), "WHT matrix 8x8 does not match");
        System.out.println("\tTest WHT matrix 8x8: OK");

        assertArrayEquals(whtMatrix32, roundArray(Transform.getTransformMatrix(TransformType.WHT, 32).times(Math.sqrt(32)), 0), "WHT matrix 32x32 does not match");
        System.out.println("\tTest WHT matrix 32x32: OK\n");
    }

    @Test
    @Order(2)
    void transformTest() {
        System.out.println("Transform test for 8x8 matrix:");

        var transformDCT = Transform.transform(new Matrix(input8x8), TransformType.DCT, 8);
        assertArrayEquals(transformedDCT8x8, roundArray(transformDCT, 6), "Wrong DCT 8x8 transform with block size 8");
        System.out.println("\tTransform DCT 8x8: OK");

        var transformWHT = Transform.transform(new Matrix(input8x8), TransformType.WHT, 8);
        assertArrayEquals(transformedWHT8x8, roundArray(transformWHT, 6), "Wrong WHT 8x8 transform with block size 8");
        System.out.println("\tTransform WHT 8x8: OK");


        transformDCT = Transform.inverseTransform(transformDCT, TransformType.DCT, 8);
        assertArrayEquals(input8x8, roundArray(transformDCT, 2), "Wrong DCT 8x8 inverse transform with block size 8");
        System.out.println("\tInverse transform DCT 8x8: OK");

        transformWHT = Transform.inverseTransform(transformWHT, TransformType.WHT, 8);
        assertArrayEquals(input8x8, roundArray(transformWHT, 2), "Wrong WHT 8x8 inverse transform with block size 8");
        System.out.println("\tInverse transform WHT 8x8: OK" + "\n");
    }

    @Test
    @Order(3)
    void transformBlocksTest() {
        System.out.println("Transform test for larger NxN matrix:");

        var transformDCT = Transform.transform(new Matrix(testArray), TransformType.DCT, 8);
        assertArrayEquals(transformedDCT, roundArray(transformDCT, 4), "Wrong DCT NxN transform with block size 8");
        System.out.println("\tTransform DCT NxN: OK");

        var transformWHT = Transform.transform(new Matrix(testArray), TransformType.WHT, 8);
        assertArrayEquals(transformedWHT, roundArray(transformWHT, 4), "Wrong WHT NxN transform with block size 8");
        System.out.println("\tTransform WHT NxN: OK");


        transformDCT = Transform.inverseTransform(transformDCT, TransformType.DCT, 8);
        assertArrayEquals(testArray, roundArray(transformDCT, 2), "Wrong DCT NxN inverse transform with block size 8");
        System.out.println("\tInverse transform DCT NxN: OK");

        transformWHT = Transform.inverseTransform(transformWHT, TransformType.WHT, 8);
        assertArrayEquals(testArray, roundArray(transformWHT, 2), "Wrong WHT NxN inverse transform with block size 8");
        System.out.println("\tInverse transform WHT NxN: OK" + "\n");

    }

    static double[][] testArray = {{125.07, 89.5, 253.34, 20.04, 23.71, 175.34, 75.42, 148.02, 96.68, 43.11, 129.88, 35.72, 171.75, 53.03, 199.68, 159.24, 11.06, 154.98, 237.83, 57.3, 253.44, 180.32, 192.42, 107.56, 84.58, 222.3, 144.15, 239.37, 7.7, 186.04, 172.94, 168.51}, {161.4, 249.16, 63.85, 147.73, 182.95, 139.14, 110.07, 233.17, 53.24, 104.5, 8.01, 180.69, 224.12, 87.9, 250.29, 88.23, 50.48, 126.11, 183.3, 165.53, 207.53, 178.92, 60.34, 110.44, 83.49, 41.68, 245.12, 166.99, 179.52, 34.19, 203.8, 149.55}, {157.15, 17.38, 170.7, 194.09, 63.27, 208.15, 149.46, 202.65, 154.65, 57.31, 227.09, 144.89, 47.31, 195.4, 138.44, 171.46, 231.19, 161.84, 122.49, 117.67, 157.75, 18.54, 235.49, 137.94, 21.21, 145.72, 43.52, 5.82, 75.06, 249.23, 218.71, 107.52}, {47.06, 121.37, 224.54, 162.44, 64.96, 224.58, 45.89, 17.51, 110.52, 165.98, 93.84, 139.39, 131.82, 149.31, 189.04, 107.56, 222.37, 49.92, 145.4, 219.25, 176.69, 88.35, 172.75, 27.53, 253.96, 222.98, 58.72, 67.48, 180.63, 137.91, 90.63, 221.66}, {168.6, 218.32, 167.65, 115.73, 8.17, 7.01, 247.93, 12.24, 204.08, 132.98, 183.36, 131.18, 19.03, 130.15, 6.96, 129.12, 186.64, 197.56, 104.95, 200.11, 170.29, 120.54, 35.95, 155.62, 25.31, 141.33, 155.16, 238.37, 199.88, 127.09, 240.67, 39.82}, {184.43, 122.81, 212.33, 69.32, 230.87, 12.11, 1.72, 94.25, 230.58, 214.72, 38.45, 134.3, 180.05, 0.35, 9.29, 90.44, 244.49, 85.78, 137.09, 158.93, 242.69, 138.82, 206.03, 158.85, 6.49, 75.61, 78.49, 47.65, 199.54, 50.69, 142.17, 148.15}, {108.61, 78.01, 117.96, 202.3, 200.5, 19.98, 205.98, 26.92, 29.46, 106.14, 12.59, 54.7, 133.38, 173.01, 216.34, 149.15, 2.33, 102.4, 224.85, 41.53, 104.76, 195.74, 87.98, 14.1, 55.38, 189.19, 55.48, 73.95, 33.96, 50.41, 203.59, 79.59}, {121.62, 70.64, 61.86, 112.72, 249.44, 178.35, 210.88, 31.57, 80.25, 184.07, 116.74, 108.83, 196.26, 249.57, 126.39, 236.51, 184.37, 123.93, 80.97, 202.92, 76.45, 173.68, 41.53, 162.24, 99.32, 124.19, 182.64, 100.88, 108.34, 10.23, 145.13, 111.03}, {194.06, 229.62, 43.85, 176.49, 59.21, 70.45, 35.55, 178.02, 122.25, 9.42, 204.85, 31.01, 239.84, 16.08, 184.14, 101.54, 248.21, 201.08, 114.43, 248.09, 112.83, 159.66, 60.53, 165.69, 61.69, 85.48, 133.68, 141.25, 165.73, 74.58, 244.07, 64.27}, {29.11, 13.53, 119.59, 165.06, 13.4, 141.71, 99.39, 94.04, 132.94, 207.98, 223.14, 129.55, 38.03, 248.34, 252.99, 183.77, 144.19, 33.1, 165.61, 231.54, 168.92, 118.84, 46.2, 234.6, 107.1, 203.44, 205.57, 250.07, 177.82, 210.33, 93.92, 210.75}, {88.78, 11.79, 187.68, 221.84, 64.36, 130.13, 252.14, 13.48, 95.14, 80.07, 13.09, 111.57, 190.16, 10.73, 191.03, 254.89, 98.48, 35.8, 90.27, 135.62, 118.29, 141.84, 144.0, 11.96, 185.54, 215.45, 133.53, 146.25, 24.4, 87.52, 232.26, 199.98}, {133.88, 239.6, 95.49, 117.36, 193.69, 110.43, 142.67, 103.13, 82.92, 118.94, 198.28, 11.65, 47.33, 138.8, 235.73, 164.02, 204.95, 178.44, 152.27, 177.54, 245.33, 245.74, 124.33, 227.29, 150.09, 231.14, 9.6, 173.11, 1.68, 43.81, 7.38, 91.72}, {122.75, 26.62, 63.7, 98.19, 171.35, 71.99, 161.53, 108.39, 156.25, 2.87, 74.83, 164.18, 37.57, 155.62, 177.52, 136.83, 80.77, 159.19, 205.01, 160.16, 16.35, 238.87, 101.97, 79.21, 193.49, 31.39, 245.07, 27.62, 119.23, 72.69, 98.62, 176.98}, {153.7, 9.4, 154.73, 14.65, 143.69, 70.47, 152.25, 82.64, 64.46, 221.04, 155.74, 219.43, 229.7, 96.87, 126.95, 118.34, 115.75, 154.53, 211.64, 161.57, 229.38, 159.34, 44.24, 36.66, 73.41, 216.09, 66.64, 103.36, 225.78, 150.47, 0.5, 97.71}, {216.31, 107.58, 59.74, 42.16, 10.1, 188.26, 226.44, 160.4, 33.34, 193.15, 188.89, 8.47, 235.98, 104.68, 70.72, 199.51, 235.42, 102.26, 64.04, 13.35, 127.78, 12.31, 107.95, 113.94, 186.52, 100.62, 156.31, 92.26, 198.71, 117.0, 160.57, 70.21}, {6.33, 113.84, 224.48, 191.47, 138.44, 48.56, 112.51, 139.19, 86.11, 22.82, 43.78, 216.73, 198.48, 85.2, 1.41, 87.57, 2.93, 68.34, 230.51, 117.65, 187.5, 81.05, 20.04, 249.47, 156.23, 11.12, 254.99, 200.09, 197.33, 130.11, 101.09, 132.38}, {79.42, 92.54, 233.92, 137.58, 104.29, 178.38, 98.31, 145.2, 193.04, 19.7, 152.11, 61.39, 54.22, 195.0, 110.99, 170.07, 59.63, 167.41, 172.25, 32.96, 123.19, 26.68, 52.07, 238.3, 34.29, 73.45, 144.96, 130.71, 214.82, 163.84, 174.28, 219.67}, {8.69, 77.21, 65.53, 132.35, 43.84, 120.12, 252.37, 87.68, 229.9, 30.34, 227.02, 132.45, 139.05, 116.11, 28.03, 92.75, 59.39, 37.16, 138.55, 183.66, 18.02, 91.74, 18.32, 238.4, 36.02, 86.0, 185.98, 174.01, 204.1, 80.44, 66.56, 49.73}, {175.83, 86.7, 131.41, 196.01, 30.61, 176.99, 218.98, 197.03, 0.08, 107.82, 86.11, 197.63, 70.27, 179.88, 158.72, 206.08, 236.74, 161.34, 220.74, 63.33, 242.21, 72.44, 122.79, 65.61, 84.37, 221.14, 130.18, 62.67, 12.22, 21.02, 171.34, 90.94}, {56.16, 205.13, 109.08, 137.25, 25.88, 162.21, 97.02, 96.77, 85.55, 225.1, 28.21, 130.95, 243.02, 4.6, 31.59, 15.63, 233.71, 196.62, 234.95, 71.77, 160.42, 139.69, 84.86, 82.49, 182.73, 5.47, 40.73, 187.65, 143.68, 95.1, 220.63, 44.55}, {137.31, 215.57, 131.12, 147.2, 147.91, 251.87, 107.46, 234.09, 211.48, 52.19, 253.92, 140.13, 75.43, 1.78, 21.02, 11.07, 30.42, 168.09, 178.53, 100.84, 217.74, 193.92, 113.67, 110.77, 86.42, 168.87, 254.23, 72.41, 37.45, 133.74, 20.48, 195.66}, {76.73, 62.5, 253.44, 182.04, 239.86, 116.57, 69.69, 59.34, 224.7, 71.99, 94.88, 37.62, 142.46, 141.31, 74.46, 244.09, 174.44, 198.64, 240.24, 223.94, 9.56, 48.56, 161.37, 192.63, 58.04, 222.17, 131.85, 225.91, 232.67, 16.58, 250.01, 22.92}, {237.89, 122.95, 242.42, 174.51, 11.48, 156.9, 216.57, 94.06, 115.8, 209.93, 111.78, 105.53, 38.59, 55.25, 33.44, 244.92, 33.88, 46.95, 109.28, 174.39, 240.13, 187.34, 5.01, 140.75, 156.44, 178.71, 189.26, 234.31, 8.21, 62.54, 9.33, 186.96}, {230.27, 11.49, 190.73, 53.98, 9.6, 252.52, 33.26, 237.96, 105.1, 57.33, 176.14, 239.23, 129.12, 225.47, 18.3, 22.66, 194.27, 239.38, 132.91, 162.38, 154.87, 35.34, 157.22, 172.01, 99.57, 44.59, 210.2, 231.49, 185.9, 209.25, 41.14, 247.63}, {63.07, 253.87, 176.88, 85.45, 102.25, 105.09, 219.73, 179.51, 27.31, 178.52, 165.82, 174.66, 50.41, 174.95, 111.69, 109.39, 74.12, 205.46, 243.01, 225.85, 136.43, 118.73, 35.65, 75.08, 210.97, 137.62, 228.98, 138.27, 132.53, 21.31, 151.09, 14.93}, {87.7, 199.5, 243.62, 252.18, 66.67, 154.95, 127.09, 125.36, 54.9, 166.75, 214.33, 34.49, 78.65, 37.89, 105.8, 137.96, 194.28, 47.24, 221.2, 154.99, 29.56, 208.35, 21.13, 226.6, 135.1, 195.1, 46.55, 240.37, 180.63, 37.25, 6.92, 198.71}, {239.02, 77.6, 184.95, 212.1, 240.98, 11.48, 102.64, 63.44, 210.28, 78.77, 3.79, 172.97, 12.58, 153.57, 78.36, 33.57, 176.09, 77.36, 27.85, 245.56, 79.61, 76.95, 9.62, 121.29, 166.33, 75.35, 85.42, 45.18, 32.98, 120.24, 1.29, 62.13}, {105.26, 57.15, 162.04, 83.04, 199.61, 7.31, 73.67, 109.9, 196.77, 148.23, 161.78, 64.49, 159.81, 213.91, 12.39, 249.14, 118.16, 165.81, 194.78, 75.9, 149.89, 65.21, 67.89, 25.62, 91.77, 12.88, 13.33, 7.24, 35.84, 167.54, 138.43, 238.86}, {81.82, 135.58, 107.72, 16.58, 42.52, 11.16, 235.01, 154.7, 58.15, 52.8, 151.78, 61.02, 91.99, 4.84, 244.66, 24.34, 252.0, 170.57, 241.71, 152.76, 22.75, 181.59, 132.92, 145.39, 137.8, 172.47, 235.6, 2.45, 220.95, 118.76, 4.48, 4.03}, {38.69, 91.2, 214.9, 90.78, 218.13, 89.56, 15.35, 81.04, 137.2, 30.03, 52.51, 153.14, 13.69, 211.39, 192.96, 43.42, 151.39, 176.84, 216.47, 50.85, 19.34, 30.77, 30.1, 111.98, 195.34, 11.88, 136.34, 161.06, 176.35, 27.81, 76.63, 218.94}, {91.68, 9.4, 213.6, 11.55, 135.02, 212.2, 167.28, 48.47, 77.75, 17.01, 105.92, 69.97, 155.0, 226.49, 207.09, 56.83, 45.45, 35.17, 4.0, 186.09, 153.28, 81.0, 65.17, 62.35, 128.9, 3.33, 208.29, 234.41, 0.8, 198.58, 35.96, 219.48}, {162.45, 107.57, 241.81, 152.86, 152.36, 21.13, 76.09, 74.8, 185.68, 128.68, 73.96, 207.69, 227.95, 103.65, 168.58, 136.5, 155.51, 238.22, 228.99, 82.73, 112.86, 190.11, 149.87, 252.81, 149.36, 103.81, 166.5, 45.42, 47.11, 109.47, 204.07, 123.39}};
    static double[][] transformedDCT = {{1017.4925, 71.7754, -49.0076, -5.3972, -45.365, 54.7899, 22.2452, 63.6027, 1014.8138, -77.0913, 29.4939, 35.8364, 16.3338, -28.2578, -44.5275, 3.1408, 1115.8563, 46.5762, -109.1895, 36.6676, 24.1563, 2.2235, 11.5586, 71.9773, 996.3025, -96.0849, 8.1701, -65.4745, -101.125, 2.8157, -144.2494, 36.2673}, {47.9323, -33.8865, 124.4147, -90.2455, -55.1787, -60.7282, 177.3324, -139.7409, -24.4368, -37.5757, -30.7389, -32.8752, -0.3047, 134.0149, -24.034, 103.9248, 50.1836, -36.7265, -49.5811, -31.0733, -45.3419, -37.8937, -72.8123, 116.8392, 126.8146, -34.905, -7.9596, 4.6592, -22.4567, 27.6908, 73.5227, -91.7372}, {25.8974, -110.0625, 3.778, 84.47, 60.1594, -58.335, -3.9936, 44.0235, 15.6594, -204.4086, -29.6009, 31.6399, -11.4671, -59.3961, -73.9765, 86.6327, -52.6804, -88.0816, -66.8393, -41.9341, -148.1984, -109.5016, 81.7621, -23.3243, -32.4767, 45.7549, 25.6579, -139.6059, -39.3794, 89.9803, 19.8277, -24.799}, {-66.9815, 153.493, 85.9161, -88.2836, -15.0362, -54.5647, -11.197, 117.5337, -120.5285, 127.6187, 50.3894, 6.4558, 100.9958, -27.7669, -65.1451, 64.3399, 50.9372, -63.1761, -72.9022, 9.1169, -65.5962, -94.4165, 29.4584, 66.5342, 11.0518, -19.602, -95.8555, -72.4722, 12.7897, 37.8076, -55.9711, -39.0045}, {-67.1125, 20.8001, -7.7075, 30.2706, -190.565, 50.1763, 35.667, -16.902, 38.1937, 10.8341, 24.7586, -36.9651, -40.3712, -35.343, 89.069, 5.1934, 12.8738, 31.988, -10.5494, -0.6132, 54.0337, -0.2765, 1.2213, -77.0763, 130.935, 113.0593, -4.9286, -18.556, 47.3075, 10.0309, 8.5034, -82.2201}, {-66.5468, -18.1959, -120.2747, -48.5458, -38.3745, 65.5594, 133.6888, -1.5405, -31.0528, -98.0607, 32.338, 17.6314, -68.6927, 20.152, -14.1, 49.0553, -55.697, -25.0009, -34.2995, 20.3982, -142.3692, 72.5633, -10.9248, 137.231, -15.3119, 30.7707, 184.6789, 93.6234, -34.0843, -91.7545, -9.8917, -162.6295}, {-19.3212, -20.1376, 9.0389, 6.3952, 29.1169, -5.0693, 181.3395, 54.1973, 37.6712, 130.4794, 45.8035, -52.8692, 56.181, -28.2302, 121.4884, 16.9967, 111.9747, -22.2888, 151.8996, 38.0447, 92.9064, 64.5045, -90.3807, 65.1778, -57.5202, -81.6173, 11.4477, 51.1552, -52.986, -69.9682, 35.7271, -45.7513}, {4.5065, -43.742, 89.5, -28.0883, -39.23, 183.1218, -72.262, 9.7657, -17.2004, -22.522, 48.2807, -63.5165, -65.456, 60.4605, 200.6717, -15.472, -41.0718, 24.1039, 61.6117, -51.8534, -69.3994, -93.7817, -26.4265, -19.3837, -17.9303, -45.9064, -76.9742, 27.9717, -175.5562, 83.8379, -71.1181, -103.4133}, {920.1738, -32.3467, 10.813, -18.7185, -8.7563, 119.3742, -24.8346, 21.3849, 1023.1575, -125.4941, -5.34, -67.1127, 9.2325, -19.0504, -28.5903, 113.8795, 1084.3563, 52.5536, -87.8103, -25.0737, 90.9987, -39.6045, 118.5055, -23.0276, 1065.975, 67.2477, -18.1219, -52.6706, 34.715, -5.7946, 3.7369, 29.8895}, {-17.8278, 53.7893, -32.7663, -13.1166, 28.3279, 16.7829, -21.2598, -131.2988, 60.2067, -63.8011, 137.7721, 1.0263, -99.9689, 112.6654, 5.8055, 96.0415, 99.6536, 8.5328, -6.0245, 47.7995, 61.1833, 90.2921, -4.7832, -129.5049, 38.2535, -42.1556, 57.4338, -66.5347, -63.7625, 33.4105, -110.7182, -99.8445}, {-4.1788, 31.6607, 37.9017, -118.2421, 8.3268, -22.5682, 41.1542, -126.7721, -22.7558, 60.0046, -112.577, 7.9199, 71.5434, -80.1856, 17.9291, 81.2542, -51.7239, 2.5612, 61.1807, -101.5117, 146.6874, -31.0176, -1.1006, 36.9724, 104.3336, -92.4641, -167.8724, 12.4805, -11.8215, 82.8589, 4.6528, 99.1677}, {-49.9414, 23.6907, 155.2231, 95.6503, 90.4831, -70.5138, 28.663, 17.775, 51.9018, 68.0136, -65.6206, -3.1393, -49.8603, 1.924, 6.9064, 64.7972, 47.156, 144.5334, 12.9921, 35.0997, -42.9984, 6.5311, -14.9487, -72.2902, -69.4934, -37.6628, -82.6214, 74.6162, -18.1705, -90.8113, -12.1815, 99.21}, {60.5363, 79.9602, -18.1693, -61.0325, 94.0212, -173.2292, -105.6422, -27.4052, -134.515, -2.0777, -19.9666, 61.1841, 44.265, 144.3372, 81.0938, 42.1598, 132.0013, -23.1735, 16.0544, -69.7266, -45.3713, -60.8023, 48.3261, -104.5144, -109.0475, 6.3246, -2.482, -35.8375, 34.8025, 95.8929, 46.7538, 69.3746}, {111.657, 71.5395, 151.0721, 92.4644, -27.9978, -47.9561, -57.7187, -64.3519, -46.1625, -18.4146, 31.8072, -47.6993, -28.9402, -149.4796, -16.6049, 196.0504, 35.2092, 59.3028, 127.1107, 149.5926, 47.4484, -5.5374, -95.0098, 34.0218, -113.884, 40.989, 59.4707, 73.5223, -30.2534, 43.894, -158.754, -35.0085}, {10.6891, 49.9634, -83.7733, -58.8673, 11.1429, 41.8812, -8.0267, 89.5346, -61.5224, 7.3562, -95.8734, 1.3419, 204.9932, 3.0383, -125.1105, 36.001, -27.2951, 26.8373, -132.6681, 12.869, -71.9126, -3.0253, -21.0257, -3.0727, -29.9354, -27.4745, 17.6953, -0.121, -22.4446, -9.2601, -66.4451, -9.2767}, {7.0292, -46.3406, 26.2446, 33.4846, 8.8582, 115.9089, -4.0928, -25.4734, -89.723, -64.6818, 32.8309, 34.0779, 153.1849, 6.8387, -3.8234, 34.3849, -162.457, 21.2965, 69.9363, 36.5296, -111.7362, 110.4019, -36.8797, -35.0052, 42.9125, -64.2259, 109.658, -10.7699, -47.9077, 137.9863, 56.4562, 191.6053}, {1083.7225, -45.0582, 7.5793, -58.1759, -101.5175, 101.8234, 157.2575, -87.0316, 926.3163, 97.208, -15.5104, -38.5398, 101.1863, -6.3627, 146.3847, -19.2976, 1074.6138, 92.4256, -6.0474, -143.884, 36.0987, -108.8783, 53.4166, 62.6923, 1022.2775, 10.5866, -99.6592, -163.7158, 16.26, 19.0536, -19.1362, 10.0222}, {-61.8885, -96.1252, -40.3772, -34.7791, -48.9147, 5.5283, -149.6902, -31.9696, 6.3719, -53.3465, 15.157, 34.2524, -17.9297, 55.4019, 23.42, 51.4114, -90.7666, -5.9851, 61.5133, -43.6195, -7.6103, -37.9746, 77.11, 50.6897, -78.3813, -77.6576, -8.8628, 73.8193, -60.0878, -4.5803, -67.6124, 95.1988}, {-43.6884, -16.6751, 46.4104, -4.5945, -0.8215, 90.7469, 133.3156, 63.67, 56.4285, -72.9147, 5.8322, 26.3938, -39.5563, 55.9846, 160.7099, -66.9198, -80.4154, -79.8874, 57.0271, -101.0223, 106.4849, -29.0326, -34.6917, -53.6942, 84.4648, -94.3434, -93.9953, -51.8372, 85.7941, -73.1719, 109.5798, -25.8332}, {44.343, 55.5459, -174.2351, -34.0015, 7.8227, -81.3534, -25.2019, 101.9844, -0.6935, 27.0178, 201.8631, 24.4063, 42.7628, 16.5778, 124.9562, 107.9572, -47.7546, -103.3869, -10.0618, -130.099, -33.4563, -14.1872, 24.6013, -83.0838, 56.4982, -11.072, -44.2198, -36.2752, -29.0198, -55.2476, -60.7627, 32.1637}, {4.1475, 5.0147, 52.7332, 8.6449, 4.0825, -165.7293, 116.1054, -82.8316, -60.9312, 124.6414, -136.8398, 59.7302, -22.5262, 53.5889, -17.762, 41.057, 35.2263, 28.3866, 46.6732, 38.2692, -73.0537, -96.4963, -61.4824, 54.8876, 56.62, -152.177, 1.0146, 60.8767, 62.1575, -6.7408, 170.8196, 1.3717}, {20.4995, 109.6147, 1.7738, -39.3056, -48.4002, 68.7302, -4.6578, -1.4929, -16.8022, -99.9265, 104.3071, -29.0935, -18.7517, -146.0782, -165.2982, -83.0147, 0.615, 46.7316, -39.4687, 84.3247, 11.9695, -65.7542, 38.2222, 76.2958, -6.1849, -11.1921, 95.4563, 49.0605, 45.1195, 105.281, -75.3912, -41.6333}, {25.7515, 5.4418, -65.8294, -18.5524, 96.2375, -36.2543, 115.0846, 55.0963, 47.714, -192.6345, 4.5674, 58.004, -31.5639, 24.9658, 32.5378, -64.3178, 102.8515, 139.1652, 142.0358, -32.7492, -46.1924, 55.0613, -106.3871, 99.2801, 43.6791, -66.5234, 16.5398, 28.6894, -72.6686, -9.7673, -149.1497, 56.8906}, {154.0726, -16.0417, 115.1863, 20.7655, 23.3451, 35.3068, 40.2005, -43.6035, -11.7296, -31.89, 29.5906, -124.5495, -71.2452, 93.5766, 39.7219, -53.8616, -23.1167, -77.2484, -138.1595, 107.3769, -3.6723, -115.1573, -18.3541, 82.2584, -35.2754, 60.3569, 177.9703, -149.0884, -94.9883, -118.6422, 147.0186, -83.5282}, {984.515, 76.0084, -72.1906, -129.1498, -42.2675, 12.9018, 10.2163, 190.4155, 930.825, -34.1541, -7.3384, 53.6733, -63.9, 86.0364, 22.6499, -17.7363, 1003.2888, 172.1317, 3.1058, -119.3966, 13.3537, -6.5512, 135.5509, -73.4716, 906.3638, 70.2378, 57.1279, -43.4962, 93.0437, 15.0221, 136.6811, 34.3267}, {117.3663, 8.0338, 46.4112, -64.9658, -6.0341, -0.4411, -104.5275, -103.1717, -45.1924, 92.6428, 47.0083, -142.9706, -61.8029, -92.8818, 48.3749, -68.437, 5.3123, 58.0241, -84.0702, -28.4425, 51.9, 38.6602, 65.3602, -56.3951, -30.7665, 108.2802, -24.2425, 36.7798, 39.8336, -59.1576, -120.8516, -6.1349}, {108.4599, 27.0373, -18.9644, -23.9749, -99.3453, 10.683, 28.4324, -74.0106, 65.1936, -11.277, -71.6711, -44.2538, -10.3905, -30.5657, -60.6667, -27.8477, 68.2512, -89.3185, -55.1427, -43.4618, 1.2865, -60.5017, 8.3385, -38.327, 94.73, 65.6241, -9.9873, -80.4553, -16.6442, 123.7767, -68.833, -12.561}, {-35.7533, -133.8306, 67.3816, -13.9828, -167.2098, -94.7014, -19.0967, -37.3547, -67.4134, -78.2071, -51.2564, -43.2791, -159.1237, 86.6299, -18.8536, 17.4548, -21.6062, 76.6614, -20.9877, -57.994, -76.7526, 10.8362, 11.6193, 25.2648, 103.1006, 105.9001, -109.6036, -57.351, 76.3897, 10.5503, -13.1579, 109.5837}, {-45.0175, -31.8145, 147.8664, -55.9906, -14.14, -25.5106, -103.4453, 27.0552, 99.56, 17.2179, -9.9308, -81.8293, 46.165, -88.7507, -27.836, 44.0928, 168.8062, 55.8588, 2.1832, -23.1062, -156.5187, -51.9261, -19.42, 66.8346, -9.5487, 9.0591, 35.8673, 78.6737, -189.3987, -5.079, -45.8713, 145.1787}, {-32.4709, -53.7639, -28.9398, 100.423, 7.3975, -30.0579, 50.007, 94.9514, 64.0854, -44.1344, -25.8783, 98.8369, 10.1337, -56.0155, 126.9406, -107.5533, -174.012, 7.7045, -190.5263, 41.6011, 61.1386, -34.0696, -187.6015, 34.6353, -35.7339, -121.5896, 56.2237, -15.8602, -26.0301, 136.9482, 120.7932, -71.3707}, {11.5537, 95.606, -53.6726, -10.9833, 132.1117, -50.6384, -38.5406, 60.4902, -5.2561, 43.9428, -4.1467, 90.5189, 70.549, 123.4925, -28.2689, -184.8363, 2.671, 82.4516, 47.111, -56.4345, -10.7926, -42.0309, -51.8423, -6.3741, -52.0526, 49.1662, 50.7895, 57.2692, -22.789, 61.5698, -18.8527, 120.159}, {11.4241, -44.8973, 118.5023, 62.8691, -41.3365, 82.8328, -56.501, 27.8569, -102.8202, -7.72, -51.7092, 31.2279, -40.6281, 120.299, -96.7046, 38.9118, 23.0996, -43.2452, -41.4702, 51.3659, 94.8998, 86.3532, -49.2888, -109.1356, -26.0898, 181.2096, -97.7684, 34.4733, -132.2544, -22.4043, 83.442, 30.8377}};
    static double[][] transformedWHT = {{1017.4925, 86.855, -10.0775, -45.365, 66.94, 1.7975, -53.79, 10.0875, 1014.8137, -12.4212, 12.8638, 16.3338, -87.8312, -29.8512, 44.2887, 1.2638, 1115.8562, 82.1188, 39.1338, 24.1563, 18.0363, -31.1062, -105.3012, -9.9637, 996.3025, 2.52, -90.5125, -101.125, -72.17, -130.1425, 62.75, -37.8825}, {-22.6925, 40.105, -150.3375, -60.9, 40.485, 38.0975, 74.62, 85.5425, -55.4962, 38.4438, -98.4462, -59.7512, 0.4237, 169.7087, -6.2062, 21.6037, -35.0638, 16.7987, 4.7637, -130.3037, -21.4637, -23.8362, 32.0387, -113.4237, 4.0875, -134.26, -2.6825, -171.25, -7.8, -73.7475, -4.955, 133.8275}, {0.3575, 4.05, 41.5225, -9.635, 99.85, 59.3275, 156.995, -147.4075, -84.5362, 84.8687, 29.9937, 117.6138, 118.2938, -59.0562, 32.0037, -29.4812, 89.6187, -25.3288, 30.2163, 10.8487, -72.4412, -20.9137, -58.0187, -101.5712, 65.285, 20.3975, -138.355, 31.9975, 8.6275, -68.03, -151.1375, 1.215}, {-67.1125, 10.835, 6.5675, -190.565, 22.93, 30.0025, -20.77, 58.8725, 38.1937, -12.4463, -6.5763, -40.3712, 13.1287, 91.7638, -11.2113, -48.8812, 12.8737, -64.2937, 17.4312, 54.0337, 43.0137, -2.9088, -10.2138, 26.0137, 130.935, -54.8775, 29.17, 47.3075, 125.3025, 5.97, -7.8075, 20.6}, {49.785, -194.7125, -32.105, -46.3025, -31.8075, 206.76, -38.3475, -5.85, 12.7063, 98.0812, -117.0687, -35.2187, -66.9387, -54.6487, -26.8437, 60.6513, 24.8262, 107.4637, -45.0713, -37.9738, -30.3587, -82.7162, -9.1712, -29.7287, 111.37, -78.3225, 45.94, -0.0225, -11.9575, 117.15, 34.1975, 38.385}, {-7.94, 49.2275, 15.445, 49.9225, -84.9925, 157.12, -54.4775, -21.705, 40.7962, 28.5562, 9.0713, 47.5163, 30.8563, 89.4012, -3.4887, -77.8487, 83.2912, 46.3787, -18.6162, 29.1213, -60.7637, -4.3212, 126.0037, 8.1963, -65.57, -68.2575, -7.095, -64.0225, -47.5925, 45.31, 3.3075, -2.62}, {31.32, 0.6625, 47.975, 44.4375, -123.8475, -67.51, 27.9975, -1.575, 0.0513, 20.0862, -34.4938, -32.0937, -254.7287, -123.2687, 2.4863, -18.2388, -91.5212, -106.6337, -0.2188, -172.4712, -67.4262, 55.8663, -152.8987, -101.1463, -7.9925, 11.74, -142.5375, -16.105, 138.215, 11.6875, 16.075, 4.7175}, {-90.77, 47.6175, -2.19, -18.3525, 75.9025, 67.505, -126.6475, -96.665, -77.4387, 61.7213, 44.7062, 23.6613, -31.5137, -95.4787, 77.3013, -27.9387, -4.9713, 138.0862, -22.9487, -113.6012, -81.1662, -11.4337, -85.3087, 8.9137, -8.8275, -105.79, 81.7225, 47.95, 22.585, 32.7725, 118.64, -17.9725}, {920.1738, 47.5512, -89.3887, -8.7562, -1.8287, -18.8062, 19.4938, 76.4812, 1023.1575, 60.24, -97.38, 9.2325, -116.935, -28.4575, 6.0075, -82.455, 1084.3562, -29.3262, 22.5112, 90.9988, 51.3288, 75.8812, -126.4762, -38.5737, 1065.975, 26.1625, -14.4775, 34.715, 71.075, -3.4825, -18.1725, -47.725}, {28.0663, -17.0162, 22.8287, 23.4612, -0.8312, 19.5613, 98.9962, 123.8137, -74.1025, 98.505, -10.1, 100.9775, -87.43, 13.6625, 49.2725, -50.235, -108.0162, 16.1513, 45.7188, -84.2637, 68.4213, -22.1663, 123.3662, 155.8488, -5.2325, 182.805, -86.245, -68.3925, -63.7425, 22.27, 111.0, 47.9475}, {-102.8912, -5.9038, 32.6362, 93.8488, -7.9287, 51.1237, 8.5237, -15.0887, 92.86, 34.3425, -29.0075, -72.405, 60.8875, 8.365, -22.38, 105.7275, 67.6837, -89.6988, -4.0462, -26.0787, 114.0662, 11.3187, -72.6037, 46.4988, 16.225, -2.2025, 16.6375, -18.785, -80.6, -6.5025, -84.5725, -82.89}, {60.5363, -78.5162, 74.0887, 94.0212, 59.9838, -104.5538, 23.6412, -160.0812, -134.515, 96.7625, -31.0125, 44.265, 1.7375, 67.28, -49.48, 126.6125, 132.0013, -133.0512, -23.2487, -45.3712, 7.0988, 50.7912, -3.6613, -41.5388, -109.0475, 86.895, -79.555, 34.8025, 25.0175, 42.245, -20.185, 28.7575}, {22.2087, -113.5087, 8.8813, -10.6712, 93.3113, -56.6612, -32.4812, 35.6612, 44.3975, 98.135, -80.69, -108.4825, -64.22, 56.2925, 135.3225, 12.335, 112.0613, -47.6712, 8.9212, 99.3488, -17.9362, -10.2838, 9.4837, 107.0362, 24.8275, -149.935, -63.425, -49.7925, 54.6175, -102.44, 119.51, 61.4075}, {8.2762, 29.8787, -72.6462, 13.4813, 84.7338, -16.3688, -61.2937, -45.2412, -65.5475, 55.715, 23.955, 216.7675, 8.08, -150.8325, -80.0275, -45.6, -45.0112, 4.4963, -4.3512, -10.3037, 26.7763, -56.2812, -84.0137, -31.2712, 12.27, 24.0275, -33.3025, -25.26, -56.92, -73.3975, -21.4375, 13.69}, {-7.9512, -165.5187, -32.5787, 3.4288, 56.2163, 63.6337, 46.2437, -16.7737, 2.52, 42.5275, 59.0225, -12.35, 18.4725, 33.775, -86.855, -81.2425, -37.3412, 0.8563, -67.3162, 163.0412, 12.0313, 47.5537, 96.4362, -84.4612, 107.8475, 100.68, -67.44, -2.3325, -71.6875, -34.48, -160.92, 37.3425}, {58.8312, -18.8762, 175.6088, 19.4963, 17.1338, 47.5813, 184.1262, -32.9212, 20.36, 106.8025, 31.2625, -97.855, 5.3375, -19.775, -26.29, -187.3125, 104.7862, 39.7237, 154.8513, 51.7487, 51.3137, -31.3538, 97.9687, 8.9212, -142.115, -28.8425, 132.0175, -9.825, -4.31, -146.5225, 15.0475, 13.9}, {1083.7225, -66.9525, -107.3675, -101.5175, 15.0175, 148.1875, -53.1775, 84.3875, 926.3162, -10.1837, 11.5863, 101.1863, 102.4713, 129.3062, -70.3488, -24.6838, 1074.6137, 8.2313, -24.6338, 36.0987, 95.0837, 47.0363, -26.0288, -187.9212, 1022.2775, -17.755, -132.3175, 16.26, 63.93, -55.8175, -84.75, -73.9475}, {144.405, -8.71, -17.44, -1.4, 28.045, 25.605, 55.005, 33.09, -14.9738, -57.6587, -132.6987, -64.6637, -4.4937, 53.5363, 92.1812, 3.9213, -47.2637, 43.5587, 101.3387, -8.0037, -144.0437, -35.7462, -124.6062, -86.3737, -36.0475, -104.335, -25.1475, -88.715, 61.05, 146.8475, 134.695, -103.1875}, {-11.19, 19.365, 11.24, 10.75, -70.975, -131.015, -117.3, -108.875, 11.3587, 188.8638, 0.0887, 41.0638, 26.2838, 212.6338, 25.5837, 46.7137, -69.3412, -129.8087, -168.3437, -34.4263, -17.2812, 44.9162, 31.1112, -31.5462, 19.79, 41.7675, 14.7, -60.9125, -63.3375, -79.065, -75.0325, -106.25}, {4.1475, -125.0475, 99.7725, 4.0825, -18.5125, 127.4475, 4.2875, -92.1575, -60.9312, 89.4188, 62.0937, -22.5262, 97.9287, -68.7762, -119.6262, 47.1088, 35.2263, 32.2837, 85.4837, -73.0537, -16.8637, -38.9413, 66.6488, -77.2037, 56.62, -15.3875, -6.995, 62.1575, -158.9425, 158.205, -64.4325, 36.915}, {-93.6, -57.5, -70.755, -61.31, -42.735, -126.1, 50.575, 39.325, 4.5363, -1.7137, 4.4012, -20.9988, -79.6237, -69.0887, -7.8088, 21.7862, -62.7538, 68.8288, 25.9687, 6.9562, 28.1612, 96.7587, 41.5888, -49.0487, -83.9575, 102.88, 23.3425, -18.5, -112.07, -80.2275, 27.015, 78.4575}, {7.0725, 64.3325, -21.2775, 88.5975, -8.5175, 128.8875, -99.9925, -36.9025, 65.6762, -86.4587, -44.8338, -44.2987, -182.0287, 87.0612, -29.0788, 114.1512, 64.2487, 80.1562, -41.8788, -1.9262, 106.3538, -44.5037, 184.0913, -38.8612, 72.6775, 10.72, -15.6775, -34.305, -106.09, -96.4825, 17.57, -33.7525}, {-50.2175, 62.7425, -57.3425, -37.5875, -2.7825, 99.1525, 32.6075, 63.6675, 33.8737, -18.6912, -14.8012, -24.4662, 20.7337, 127.0637, -48.6912, 47.0087, -113.6537, -134.6962, -78.6362, 116.0563, -83.8187, 7.3638, -4.8563, -35.8987, 61.32, -85.3125, -32.195, 107.0725, -42.5325, 110.61, -146.6625, -57.54}, {-14.7, 74.01, 2.79, -38.275, 117.74, -67.965, -110.705, -64.795, -9.3362, -39.3762, 81.5637, 35.6237, -85.3112, -7.8162, 188.8687, -91.6862, -8.5862, -26.7637, -17.9688, -6.0312, 24.4188, 44.3463, -5.6187, -22.9562, 43.34, 48.1025, -8.93, 59.9025, -31.2075, -134.57, 38.9575, 109.525}, {984.515, 162.8875, -91.52, -42.2675, 78.39, -18.1875, -70.605, -133.5225, 930.825, 16.56, -14.425, -63.9, -26.5375, 18.1175, -15.4475, 102.8475, 1003.2887, -63.0187, -18.2638, 13.3538, 205.8137, 126.4212, -49.0037, -51.5913, 906.3637, 39.2963, -17.3238, 93.0438, 74.4912, 148.1387, 0.4737, -28.9138}, {13.5725, 41.11, -0.1975, -71.74, -96.0425, -7.505, 133.9275, 68.365, -95.255, 24.16, -35.935, -78.56, -5.7725, -61.2975, -36.8625, 88.4625, -38.0737, -52.3663, -3.6712, 98.4812, 10.4962, -128.3312, -74.3662, 116.1513, -18.6362, 64.1612, 69.0563, -104.7012, 143.4662, 45.0088, -125.1212, -0.8038}, {32.4, -159.2275, -54.515, -131.4225, -25.535, -40.8425, 98.3, -46.2875, -93.965, 22.505, -137.7, -147.6, 46.3825, -51.8875, 16.5275, -47.1825, 72.9887, -2.2288, -48.3037, -77.9462, 107.2787, 143.6362, -1.8987, -16.9462, 87.9413, 104.5287, 78.9537, 96.8662, 124.1537, -158.2337, -58.7737, -132.5862}, {-45.0175, -1.24, -43.8775, -14.14, -21.3125, -38.985, 176.1975, -56.115, 99.56, -2.58, -14.135, 46.165, 14.8225, -29.5175, 1.4775, -128.0125, 168.8062, 49.1937, 24.8788, -156.5187, 34.8812, -17.1062, 9.4487, -81.0037, -9.5488, 148.2937, 55.6038, -189.3987, -44.0713, -28.6538, 50.6912, -18.6862}, {108.7625, -58.575, -16.0025, 56.76, 70.0475, -65.3, 19.5825, 5.135, 12.6575, -137.7075, 42.5925, 4.1075, 109.985, 111.08, 21.88, -134.115, -29.4712, -21.1637, 6.0713, 67.3438, 44.1988, -16.5788, -104.1137, 12.0137, -63.5787, -53.0012, 51.2587, 30.0912, -2.0463, -71.2137, 75.4812, 25.7787}, {52.18, 25.0675, 42.05, 84.0375, 81.515, -44.5975, -43.055, -60.4275, 20.0925, -111.0925, 25.8375, 61.2025, 66.125, -57.54, -10.0, 178.275, 28.5862, -45.4013, -3.7163, -9.4788, 50.4612, -32.7212, 37.8237, -78.3338, -11.8388, 146.8238, -17.9712, -27.4237, 59.8987, -23.9337, 56.5663, 46.3088}, {95.7825, -79.535, -26.3225, -142.34, 17.9075, 39.05, -12.9075, 48.475, 62.2425, -4.2075, -32.8475, -36.5975, -24.81, -66.52, -42.4, -111.62, 62.0338, -67.0487, -34.1737, 5.3188, -99.9812, -0.9488, -74.2637, -19.2162, 107.4387, -36.2187, -100.5437, -6.6563, 98.1963, -63.0562, -4.9063, 38.8362}, {-56.345, 7.5225, 53.095, -64.1775, -132.28, 39.6175, -54.93, -64.7925, 56.5925, -89.9275, 36.2425, -54.0275, -80.325, 99.755, -74.105, 35.815, -153.8287, 66.1237, 32.3288, -31.9237, 29.4012, -166.8212, -77.3362, -86.7037, 37.5587, -2.4438, -149.8737, 65.8787, -58.1087, 68.6237, -0.8913, 77.6462}};

    static double[][] input8x8 = {{148.01, 177.34, 5.23, 44.9, 129.76, 244.34, 11.09, 215.97}, {114.85, 151.66, 27.28, 69.54, 82.38, 191.47, 78.25, 126.9}, {70.03, 200.79, 110.86, 165.25, 41.9, 246.87, 87.12, 251.18}, {40.51, 100.89, 187.53, 248.61, 237.05, 99.39, 24.86, 201.69}, {103.34, 82.27, 35.52, 94.5, 73.1, 198.72, 60.09, 101.36}, {143.56, 202.53, 145.52, 89.22, 20.37, 211.97, 78.98, 16.42}, {206.02, 30.33, 248.09, 25.4, 212.41, 237.75, 82.98, 141.27}, {63.49, 107.12, 133.68, 226.85, 18.19, 156.98, 245.94, 190.16}};
    static double[][] transformedDCT8x8 = {{1014.70375, -68.183003, 6.689353, 40.213068, -36.15625, -103.400824, 147.99153, -177.751462}, {-39.423437, -20.019379, 50.654629, 37.391628, 72.359226, -170.114388, -29.826972, -110.903107}, {33.713927, -53.506078, 103.93766, 55.974974, -29.769289, 16.194428, 1.797893, 5.079133}, {-97.056636, 109.405558, 43.284185, 183.211757, -37.573887, -66.100659, 57.198123, 28.146009}, {-12.58375, -73.051444, -43.509876, -66.664385, 102.78125, 13.138915, -66.887228, -24.896363}, {109.719018, 14.991077, -71.336831, -37.042704, 86.881952, -90.816645, 106.119282, 115.942757}, {24.677989, 11.607479, 56.660393, -58.288966, -92.248538, 18.860142, -56.75766, -151.057743}, {-1.023097, -64.700152, 70.739545, 69.652189, -5.837722, -21.075459, 73.73016, -19.690733}};
    static double[][] transformedWHT8x8 = {{1014.70375, -197.70625, 71.64375, -36.15625, -64.52375, 139.28625, -50.45375, 13.01625}, {6.24375, -10.46625, 108.89875, 27.40875, -82.48375, 122.04625, 14.10125, -20.75875}, {-145.59375, -42.73875, 197.08125, -45.86375, 13.04875, 6.83375, 87.65375, 59.28875}, {-12.58375, -45.71875, -83.51375, 102.78125, -37.70125, -78.44625, -14.60125, -9.32625}, {18.67125, -137.31375, 33.60125, 97.04625, -37.21125, -31.60625, 17.64875, -103.84625}, {35.70125, -125.83375, -30.42375, -96.61875, 31.30875, -12.55625, 104.91375, 53.87875}, {21.70375, 65.12375, 27.99875, 7.79875, -81.98875, 50.05125, 59.73625, 24.50625}, {37.79375, 106.19375, 96.97375, 44.24375, 33.87125, 54.85125, -90.81875, -96.71875}};

    static double[][] dctMatrix8 = {{0.3536, 0.3536, 0.3536, 0.3536, 0.3536, 0.3536, 0.3536, 0.3536}, {0.4904, 0.4157, 0.2778, 0.0975, -0.0975, -0.2778, -0.4157, -0.4904}, {0.4619, 0.1913, -0.1913, -0.4619, -0.4619, -0.1913, 0.1913, 0.4619}, {0.4157, -0.0975, -0.4904, -0.2778, 0.2778, 0.4904, 0.0975, -0.4157}, {0.3536, -0.3536, -0.3536, 0.3536, 0.3536, -0.3536, -0.3536, 0.3536}, {0.2778, -0.4904, 0.0975, 0.4157, -0.4157, -0.0975, 0.4904, -0.2778}, {0.1913, -0.4619, 0.4619, -0.1913, -0.1913, 0.4619, -0.4619, 0.1913}, {0.0975, -0.2778, 0.4157, -0.4904, 0.4904, -0.4157, 0.2778, -0.0975}};
    static double[][] dctMatrix16 = {{0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25, 0.25}, {0.3519, 0.3383, 0.3118, 0.2733, 0.2243, 0.1667, 0.1026, 0.0347, -0.0347, -0.1026, -0.1667, -0.2243, -0.2733, -0.3118, -0.3383, -0.3519}, {0.3468, 0.294, 0.1964, 0.069, -0.069, -0.1964, -0.294, -0.3468, -0.3468, -0.294, -0.1964, -0.069, 0.069, 0.1964, 0.294, 0.3468}, {0.3383, 0.2243, 0.0347, -0.1667, -0.3118, -0.3519, -0.2733, -0.1026, 0.1026, 0.2733, 0.3519, 0.3118, 0.1667, -0.0347, -0.2243, -0.3383}, {0.3266, 0.1353, -0.1353, -0.3266, -0.3266, -0.1353, 0.1353, 0.3266, 0.3266, 0.1353, -0.1353, -0.3266, -0.3266, -0.1353, 0.1353, 0.3266}, {0.3118, 0.0347, -0.2733, -0.3383, -0.1026, 0.2243, 0.3519, 0.1667, -0.1667, -0.3519, -0.2243, 0.1026, 0.3383, 0.2733, -0.0347, -0.3118}, {0.294, -0.069, -0.3468, -0.1964, 0.1964, 0.3468, 0.069, -0.294, -0.294, 0.069, 0.3468, 0.1964, -0.1964, -0.3468, -0.069, 0.294}, {0.2733, -0.1667, -0.3383, 0.0347, 0.3519, 0.1026, -0.3118, -0.2243, 0.2243, 0.3118, -0.1026, -0.3519, -0.0347, 0.3383, 0.1667, -0.2733}, {0.25, -0.25, -0.25, 0.25, 0.25, -0.25, -0.25, 0.25, 0.25, -0.25, -0.25, 0.25, 0.25, -0.25, -0.25, 0.25}, {0.2243, -0.3118, -0.1026, 0.3519, -0.0347, -0.3383, 0.1667, 0.2733, -0.2733, -0.1667, 0.3383, 0.0347, -0.3519, 0.1026, 0.3118, -0.2243}, {0.1964, -0.3468, 0.069, 0.294, -0.294, -0.069, 0.3468, -0.1964, -0.1964, 0.3468, -0.069, -0.294, 0.294, 0.069, -0.3468, 0.1964}, {0.1667, -0.3519, 0.2243, 0.1026, -0.3383, 0.2733, 0.0347, -0.3118, 0.3118, -0.0347, -0.2733, 0.3383, -0.1026, -0.2243, 0.3519, -0.1667}, {0.1353, -0.3266, 0.3266, -0.1353, -0.1353, 0.3266, -0.3266, 0.1353, 0.1353, -0.3266, 0.3266, -0.1353, -0.1353, 0.3266, -0.3266, 0.1353}, {0.1026, -0.2733, 0.3519, -0.3118, 0.1667, 0.0347, -0.2243, 0.3383, -0.3383, 0.2243, -0.0347, -0.1667, 0.3118, -0.3519, 0.2733, -0.1026}, {0.069, -0.1964, 0.294, -0.3468, 0.3468, -0.294, 0.1964, -0.069, -0.069, 0.1964, -0.294, 0.3468, -0.3468, 0.294, -0.1964, 0.069}, {0.0347, -0.1026, 0.1667, -0.2243, 0.2733, -0.3118, 0.3383, -0.3519, 0.3519, -0.3383, 0.3118, -0.2733, 0.2243, -0.1667, 0.1026, -0.0347}};
    static double[][] dctMatrix32 = {{0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768, 0.1768}, {0.2497, 0.2473, 0.2425, 0.2354, 0.226, 0.2144, 0.2008, 0.1852, 0.1679, 0.1489, 0.1285, 0.1069, 0.0842, 0.0607, 0.0367, 0.0123, -0.0123, -0.0367, -0.0607, -0.0842, -0.1069, -0.1285, -0.1489, -0.1679, -0.1852, -0.2008, -0.2144, -0.226, -0.2354, -0.2425, -0.2473, -0.2497}, {0.2488, 0.2392, 0.2205, 0.1933, 0.1586, 0.1178, 0.0726, 0.0245, -0.0245, -0.0726, -0.1178, -0.1586, -0.1933, -0.2205, -0.2392, -0.2488, -0.2488, -0.2392, -0.2205, -0.1933, -0.1586, -0.1178, -0.0726, -0.0245, 0.0245, 0.0726, 0.1178, 0.1586, 0.1933, 0.2205, 0.2392, 0.2488}, {0.2473, 0.226, 0.1852, 0.1285, 0.0607, -0.0123, -0.0842, -0.1489, -0.2008, -0.2354, -0.2497, -0.2425, -0.2144, -0.1679, -0.1069, -0.0367, 0.0367, 0.1069, 0.1679, 0.2144, 0.2425, 0.2497, 0.2354, 0.2008, 0.1489, 0.0842, 0.0123, -0.0607, -0.1285, -0.1852, -0.226, -0.2473}, {0.2452, 0.2079, 0.1389, 0.0488, -0.0488, -0.1389, -0.2079, -0.2452, -0.2452, -0.2079, -0.1389, -0.0488, 0.0488, 0.1389, 0.2079, 0.2452, 0.2452, 0.2079, 0.1389, 0.0488, -0.0488, -0.1389, -0.2079, -0.2452, -0.2452, -0.2079, -0.1389, -0.0488, 0.0488, 0.1389, 0.2079, 0.2452}, {0.2425, 0.1852, 0.0842, -0.0367, -0.1489, -0.226, -0.2497, -0.2144, -0.1285, -0.0123, 0.1069, 0.2008, 0.2473, 0.2354, 0.1679, 0.0607, -0.0607, -0.1679, -0.2354, -0.2473, -0.2008, -0.1069, 0.0123, 0.1285, 0.2144, 0.2497, 0.226, 0.1489, 0.0367, -0.0842, -0.1852, -0.2425}, {0.2392, 0.1586, 0.0245, -0.1178, -0.2205, -0.2488, -0.1933, -0.0726, 0.0726, 0.1933, 0.2488, 0.2205, 0.1178, -0.0245, -0.1586, -0.2392, -0.2392, -0.1586, -0.0245, 0.1178, 0.2205, 0.2488, 0.1933, 0.0726, -0.0726, -0.1933, -0.2488, -0.2205, -0.1178, 0.0245, 0.1586, 0.2392}, {0.2354, 0.1285, -0.0367, -0.1852, -0.2497, -0.2008, -0.0607, 0.1069, 0.226, 0.2425, 0.1489, -0.0123, -0.1679, -0.2473, -0.2144, -0.0842, 0.0842, 0.2144, 0.2473, 0.1679, 0.0123, -0.1489, -0.2425, -0.226, -0.1069, 0.0607, 0.2008, 0.2497, 0.1852, 0.0367, -0.1285, -0.2354}, {0.231, 0.0957, -0.0957, -0.231, -0.231, -0.0957, 0.0957, 0.231, 0.231, 0.0957, -0.0957, -0.231, -0.231, -0.0957, 0.0957, 0.231, 0.231, 0.0957, -0.0957, -0.231, -0.231, -0.0957, 0.0957, 0.231, 0.231, 0.0957, -0.0957, -0.231, -0.231, -0.0957, 0.0957, 0.231}, {0.226, 0.0607, -0.1489, -0.2497, -0.1679, 0.0367, 0.2144, 0.2354, 0.0842, -0.1285, -0.2473, -0.1852, 0.0123, 0.2008, 0.2425, 0.1069, -0.1069, -0.2425, -0.2008, -0.0123, 0.1852, 0.2473, 0.1285, -0.0842, -0.2354, -0.2144, -0.0367, 0.1679, 0.2497, 0.1489, -0.0607, -0.226}, {0.2205, 0.0245, -0.1933, -0.2392, -0.0726, 0.1586, 0.2488, 0.1178, -0.1178, -0.2488, -0.1586, 0.0726, 0.2392, 0.1933, -0.0245, -0.2205, -0.2205, -0.0245, 0.1933, 0.2392, 0.0726, -0.1586, -0.2488, -0.1178, 0.1178, 0.2488, 0.1586, -0.0726, -0.2392, -0.1933, 0.0245, 0.2205}, {0.2144, -0.0123, -0.226, -0.2008, 0.0367, 0.2354, 0.1852, -0.0607, -0.2425, -0.1679, 0.0842, 0.2473, 0.1489, -0.1069, -0.2497, -0.1285, 0.1285, 0.2497, 0.1069, -0.1489, -0.2473, -0.0842, 0.1679, 0.2425, 0.0607, -0.1852, -0.2354, -0.0367, 0.2008, 0.226, 0.0123, -0.2144}, {0.2079, -0.0488, -0.2452, -0.1389, 0.1389, 0.2452, 0.0488, -0.2079, -0.2079, 0.0488, 0.2452, 0.1389, -0.1389, -0.2452, -0.0488, 0.2079, 0.2079, -0.0488, -0.2452, -0.1389, 0.1389, 0.2452, 0.0488, -0.2079, -0.2079, 0.0488, 0.2452, 0.1389, -0.1389, -0.2452, -0.0488, 0.2079}, {0.2008, -0.0842, -0.2497, -0.0607, 0.2144, 0.1852, -0.1069, -0.2473, -0.0367, 0.226, 0.1679, -0.1285, -0.2425, -0.0123, 0.2354, 0.1489, -0.1489, -0.2354, 0.0123, 0.2425, 0.1285, -0.1679, -0.226, 0.0367, 0.2473, 0.1069, -0.1852, -0.2144, 0.0607, 0.2497, 0.0842, -0.2008}, {0.1933, -0.1178, -0.2392, 0.0245, 0.2488, 0.0726, -0.2205, -0.1586, 0.1586, 0.2205, -0.0726, -0.2488, -0.0245, 0.2392, 0.1178, -0.1933, -0.1933, 0.1178, 0.2392, -0.0245, -0.2488, -0.0726, 0.2205, 0.1586, -0.1586, -0.2205, 0.0726, 0.2488, 0.0245, -0.2392, -0.1178, 0.1933}, {0.1852, -0.1489, -0.2144, 0.1069, 0.2354, -0.0607, -0.2473, 0.0123, 0.2497, 0.0367, -0.2425, -0.0842, 0.226, 0.1285, -0.2008, -0.1679, 0.1679, 0.2008, -0.1285, -0.226, 0.0842, 0.2425, -0.0367, -0.2497, -0.0123, 0.2473, 0.0607, -0.2354, -0.1069, 0.2144, 0.1489, -0.1852}, {0.1768, -0.1768, -0.1768, 0.1768, 0.1768, -0.1768, -0.1768, 0.1768, 0.1768, -0.1768, -0.1768, 0.1768, 0.1768, -0.1768, -0.1768, 0.1768, 0.1768, -0.1768, -0.1768, 0.1768, 0.1768, -0.1768, -0.1768, 0.1768, 0.1768, -0.1768, -0.1768, 0.1768, 0.1768, -0.1768, -0.1768, 0.1768}, {0.1679, -0.2008, -0.1285, 0.226, 0.0842, -0.2425, -0.0367, 0.2497, -0.0123, -0.2473, 0.0607, 0.2354, -0.1069, -0.2144, 0.1489, 0.1852, -0.1852, -0.1489, 0.2144, 0.1069, -0.2354, -0.0607, 0.2473, 0.0123, -0.2497, 0.0367, 0.2425, -0.0842, -0.226, 0.1285, 0.2008, -0.1679}, {0.1586, -0.2205, -0.0726, 0.2488, -0.0245, -0.2392, 0.1178, 0.1933, -0.1933, -0.1178, 0.2392, 0.0245, -0.2488, 0.0726, 0.2205, -0.1586, -0.1586, 0.2205, 0.0726, -0.2488, 0.0245, 0.2392, -0.1178, -0.1933, 0.1933, 0.1178, -0.2392, -0.0245, 0.2488, -0.0726, -0.2205, 0.1586}, {0.1489, -0.2354, -0.0123, 0.2425, -0.1285, -0.1679, 0.226, 0.0367, -0.2473, 0.1069, 0.1852, -0.2144, -0.0607, 0.2497, -0.0842, -0.2008, 0.2008, 0.0842, -0.2497, 0.0607, 0.2144, -0.1852, -0.1069, 0.2473, -0.0367, -0.226, 0.1679, 0.1285, -0.2425, 0.0123, 0.2354, -0.1489}, {0.1389, -0.2452, 0.0488, 0.2079, -0.2079, -0.0488, 0.2452, -0.1389, -0.1389, 0.2452, -0.0488, -0.2079, 0.2079, 0.0488, -0.2452, 0.1389, 0.1389, -0.2452, 0.0488, 0.2079, -0.2079, -0.0488, 0.2452, -0.1389, -0.1389, 0.2452, -0.0488, -0.2079, 0.2079, 0.0488, -0.2452, 0.1389}, {0.1285, -0.2497, 0.1069, 0.1489, -0.2473, 0.0842, 0.1679, -0.2425, 0.0607, 0.1852, -0.2354, 0.0367, 0.2008, -0.226, 0.0123, 0.2144, -0.2144, -0.0123, 0.226, -0.2008, -0.0367, 0.2354, -0.1852, -0.0607, 0.2425, -0.1679, -0.0842, 0.2473, -0.1489, -0.1069, 0.2497, -0.1285}, {0.1178, -0.2488, 0.1586, 0.0726, -0.2392, 0.1933, 0.0245, -0.2205, 0.2205, -0.0245, -0.1933, 0.2392, -0.0726, -0.1586, 0.2488, -0.1178, -0.1178, 0.2488, -0.1586, -0.0726, 0.2392, -0.1933, -0.0245, 0.2205, -0.2205, 0.0245, 0.1933, -0.2392, 0.0726, 0.1586, -0.2488, 0.1178}, {0.1069, -0.2425, 0.2008, -0.0123, -0.1852, 0.2473, -0.1285, -0.0842, 0.2354, -0.2144, 0.0367, 0.1679, -0.2497, 0.1489, 0.0607, -0.226, 0.226, -0.0607, -0.1489, 0.2497, -0.1679, -0.0367, 0.2144, -0.2354, 0.0842, 0.1285, -0.2473, 0.1852, 0.0123, -0.2008, 0.2425, -0.1069}, {0.0957, -0.231, 0.231, -0.0957, -0.0957, 0.231, -0.231, 0.0957, 0.0957, -0.231, 0.231, -0.0957, -0.0957, 0.231, -0.231, 0.0957, 0.0957, -0.231, 0.231, -0.0957, -0.0957, 0.231, -0.231, 0.0957, 0.0957, -0.231, 0.231, -0.0957, -0.0957, 0.231, -0.231, 0.0957}, {0.0842, -0.2144, 0.2473, -0.1679, 0.0123, 0.1489, -0.2425, 0.226, -0.1069, -0.0607, 0.2008, -0.2497, 0.1852, -0.0367, -0.1285, 0.2354, -0.2354, 0.1285, 0.0367, -0.1852, 0.2497, -0.2008, 0.0607, 0.1069, -0.226, 0.2425, -0.1489, -0.0123, 0.1679, -0.2473, 0.2144, -0.0842}, {0.0726, -0.1933, 0.2488, -0.2205, 0.1178, 0.0245, -0.1586, 0.2392, -0.2392, 0.1586, -0.0245, -0.1178, 0.2205, -0.2488, 0.1933, -0.0726, -0.0726, 0.1933, -0.2488, 0.2205, -0.1178, -0.0245, 0.1586, -0.2392, 0.2392, -0.1586, 0.0245, 0.1178, -0.2205, 0.2488, -0.1933, 0.0726}, {0.0607, -0.1679, 0.2354, -0.2473, 0.2008, -0.1069, -0.0123, 0.1285, -0.2144, 0.2497, -0.226, 0.1489, -0.0367, -0.0842, 0.1852, -0.2425, 0.2425, -0.1852, 0.0842, 0.0367, -0.1489, 0.226, -0.2497, 0.2144, -0.1285, 0.0123, 0.1069, -0.2008, 0.2473, -0.2354, 0.1679, -0.0607}, {0.0488, -0.1389, 0.2079, -0.2452, 0.2452, -0.2079, 0.1389, -0.0488, -0.0488, 0.1389, -0.2079, 0.2452, -0.2452, 0.2079, -0.1389, 0.0488, 0.0488, -0.1389, 0.2079, -0.2452, 0.2452, -0.2079, 0.1389, -0.0488, -0.0488, 0.1389, -0.2079, 0.2452, -0.2452, 0.2079, -0.1389, 0.0488}, {0.0367, -0.1069, 0.1679, -0.2144, 0.2425, -0.2497, 0.2354, -0.2008, 0.1489, -0.0842, 0.0123, 0.0607, -0.1285, 0.1852, -0.226, 0.2473, -0.2473, 0.226, -0.1852, 0.1285, -0.0607, -0.0123, 0.0842, -0.1489, 0.2008, -0.2354, 0.2497, -0.2425, 0.2144, -0.1679, 0.1069, -0.0367}, {0.0245, -0.0726, 0.1178, -0.1586, 0.1933, -0.2205, 0.2392, -0.2488, 0.2488, -0.2392, 0.2205, -0.1933, 0.1586, -0.1178, 0.0726, -0.0245, -0.0245, 0.0726, -0.1178, 0.1586, -0.1933, 0.2205, -0.2392, 0.2488, -0.2488, 0.2392, -0.2205, 0.1933, -0.1586, 0.1178, -0.0726, 0.0245}, {0.0123, -0.0367, 0.0607, -0.0842, 0.1069, -0.1285, 0.1489, -0.1679, 0.1852, -0.2008, 0.2144, -0.226, 0.2354, -0.2425, 0.2473, -0.2497, 0.2497, -0.2473, 0.2425, -0.2354, 0.226, -0.2144, 0.2008, -0.1852, 0.1679, -0.1489, 0.1285, -0.1069, 0.0842, -0.0607, 0.0367, -0.0123}};

    static double[][] whtMatrix2 = {{1.0, 1.0}, {1.0, -1.0}};
    static double[][] whtMatrix4 = {{1.0, 1.0, 1.0, 1.0}, {1.0, -1.0, 1.0, -1.0}, {1.0, 1.0, -1.0, -1.0}, {1.0, -1.0, -1.0, 1.0}};
    static double[][] whtMatrix8 = {{1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0}, {1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0}, {1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0}, {1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0}, {1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0}, {1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0}, {1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0}, {1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0}};
    static double[][] whtMatrix32 = {{1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0}, {1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0}, {1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0}, {1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0}, {1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0}, {1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0}, {1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0}, {1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0}, {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0}, {1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0}, {1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0}, {1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0}, {1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0}, {1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0}, {1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0}, {1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0}, {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0}, {1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0}, {1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0}, {1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0}, {1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0}, {1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0}, {1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0}, {1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0}, {1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0}, {1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0}, {1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0}, {1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0}, {1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0}, {1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0}, {1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, -1.0, -1.0, 1.0, 1.0}, {1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0, 1.0, -1.0, -1.0, 1.0, 1.0, -1.0, -1.0, 1.0, -1.0, 1.0, 1.0, -1.0}};

    private double[][] roundArray(Matrix matrix, int decimalPlaces) {
        double decimal = Math.pow(10, decimalPlaces);
        var arr = matrix.getArray();
        double[][] result = new double[arr.length][arr[0].length];

        for (int i = 0; i < arr.length; i++) {
            for (int j = 0; j < arr[0].length; j++) {
                result[i][j] = Math.round(arr[i][j] * decimal) / decimal;
            }
        }
        return result;
    }
}
